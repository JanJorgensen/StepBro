<UserControl
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:themes="http://schemas.actiprosoftware.com/winfx/xaml/themes"
	xmlns:docking="http://schemas.actiprosoftware.com/winfx/xaml/docking" 
    xmlns:shared="http://schemas.actiprosoftware.com/winfx/xaml/shared" 
	xmlns:editor="http://schemas.actiprosoftware.com/winfx/xaml/syntaxeditor"
    xmlns:local="clr-namespace:StepBro.Workbench"
    xmlns:localviews="clr-namespace:StepBro.Workbench.ToolViews"
    x:Class="StepBro.Workbench.MainView" Unloaded="UserControl_Unloaded"
    >
    <UserControl.Resources>
        <local:ToolItemDockSideConverter x:Key="ToolItemDockSideConverter" />
        <local:ToolItemStateConverter x:Key="ToolItemStateConverter" />
        <Style x:Key="DockingWindowStyle" TargetType="{x:Type docking:DockingWindow}">
            <Setter Property="Description" Value="{Binding Description, Mode=TwoWay}" />
            <Setter Property="ImageSource" Value="{Binding ImageSource, Mode=TwoWay}" />
            <Setter Property="IsActive" Value="{Binding IsActive, Mode=TwoWay}" />
            <Setter Property="IsFloating" Value="{Binding IsFloating, Mode=TwoWay}" />
            <Setter Property="IsOpen" Value="{Binding IsOpen, Mode=TwoWay}" />
            <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
            <Setter Property="SerializationId" Value="{Binding SerializationId, Mode=TwoWay}" />
            <Setter Property="Title" Value="{Binding Title, Mode=TwoWay}" />
            <Setter Property="WindowGroupName" Value="{Binding WindowGroupName, Mode=TwoWay}" />
        </Style>

        <Style x:Key="DocumentWindowStyle" TargetType="{x:Type docking:DocumentWindow}" BasedOn="{StaticResource DockingWindowStyle}">
            <Setter Property="FileName" Value="{Binding FileName, Mode=TwoWay}" />
            <Setter Property="IsReadOnly" Value="{Binding IsReadOnly, Mode=TwoWay}" />
        </Style>
        <Style x:Key="ToolWindowStyle" TargetType="{x:Type docking:ToolWindow}" BasedOn="{StaticResource DockingWindowStyle}">
            <Setter Property="DefaultDockSide" Value="{Binding DefaultDockSide, Converter={StaticResource ToolItemDockSideConverter}, Mode=TwoWay}" />
            <Setter Property="State" Value="{Binding State, Converter={StaticResource ToolItemStateConverter}, Mode=TwoWay}" />
        </Style>

        <!-- NOTE: The implicit DataTemplates defined here should normally be placed in Application.Resources so that they will be found by floating windows -->

        <DataTemplate DataType="{x:Type local:TextDocumentItemViewModel}">
            <local:TextDocumentItemView />
        </DataTemplate>

        <local:ToolItemTemplateSelector x:Key="ToolItemTemplateSelector">
            <local:ToolItemTemplateSelector.OutputViewTemplate>
                <DataTemplate>
                    <localviews:OutputView />
                </DataTemplate>
            </local:ToolItemTemplateSelector.OutputViewTemplate>
            <local:ToolItemTemplateSelector.ErrorsViewTemplate>
                <DataTemplate>
                    <localviews:ErrorsView />
                </DataTemplate>
            </local:ToolItemTemplateSelector.ErrorsViewTemplate>
            <local:ToolItemTemplateSelector.CalculatorTemplate>
                <DataTemplate>
                    <localviews:CalculatorView />
                </DataTemplate>
            </local:ToolItemTemplateSelector.CalculatorTemplate>
            <local:ToolItemTemplateSelector.ObjectPanelTemplate>
                <DataTemplate>
                    <localviews:ObjectPanelToolView />
                </DataTemplate>
            </local:ToolItemTemplateSelector.ObjectPanelTemplate>
        </local:ToolItemTemplateSelector>

    </UserControl.Resources>
    <!--Icon="/Resources/Images/ActiproAppIcon.ico"-->
    <UserControl.InputBindings>
        <KeyBinding Key="o" Modifiers="Ctrl" Command="{Binding ApplicationCommands.Open}" />
        <KeyBinding Key="F5" Command="{Binding StartOrContinueExecutionCommand}" />
        <KeyBinding Key="F5" Modifiers="Ctrl+Shift" Command="{Binding StartExecutionOfSelectedFileElementCommand}" />
        <KeyBinding Key="F6" Command="{Binding ParseAllFilesCommand}" />
        <KeyBinding Key="C" Modifiers="Ctrl+Shift" Command="{Binding ShowCalculatorToolCommand}" />
    </UserControl.InputBindings>
    <UserControl.CommandBindings>
        <CommandBinding Command="ApplicationCommands.Open" CanExecute="OpenCanExecute" Executed="OpenExecuted" />
        <CommandBinding Command="ApplicationCommands.Close" CanExecute="CloseCanExecute" Executed="CloseExecuted" />
    </UserControl.CommandBindings>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <docking:DockSite x:Name="dockSite" Grid.Row="2"
            DocumentItemContainerStyle="{StaticResource DocumentWindowStyle}"
            DocumentItemsSource="{Binding DocumentItems}"
    		ToolItemContainerStyle="{StaticResource ToolWindowStyle}"
			ToolItemTemplateSelector="{StaticResource ToolItemTemplateSelector}"
            ToolItemsSource="{Binding ToolItems}">
            <docking:SplitContainer Orientation="Vertical">
                <docking:Workspace>
                    <docking:TabbedMdiHost />
                </docking:Workspace>

                <docking:ToolWindowContainer>
                    <docking:ToolWindow Title="Documents List" ImageSource="/Resources/Images/TextDocument16.png" ContainerDockedSize="200, 150" SerializationId="ToolDocumentList">
                        <ListView x:Name="dockumentList" ItemsSource="{Binding DocumentItemsSource, ElementName=dockSite}" SelectedIndex="0" BorderThickness="0" MouseDoubleClick="dockumentList_MouseDoubleClick">
                            <ListView.View>
                                <GridView>
                                    <GridViewColumn Width="150" Header="Title" DisplayMemberBinding="{Binding Title}" />
                                    <GridViewColumn Width="60" Header="Is Open" DisplayMemberBinding="{Binding IsOpen}" />
                                    <GridViewColumn Width="80" Header="Is Selected" DisplayMemberBinding="{Binding IsSelected}" />
                                    <GridViewColumn Width="60" Header="Is Active" DisplayMemberBinding="{Binding IsActive}" />
                                </GridView>
                            </ListView.View>
                        </ListView>
                    </docking:ToolWindow>
                    <docking:ToolWindow Title="Tools List" ImageSource="/Resources/Images/TextDocument16.png" ContainerDockedSize="200, 150" SerializationId="ToolToolsList">
                        <ListView ItemsSource="{Binding ToolItemsSource, ElementName=dockSite}" SelectedIndex="0" BorderThickness="0">
                            <ListView.View>
                                <GridView>
                                    <GridViewColumn Width="150" Header="Title" DisplayMemberBinding="{Binding Title}" />
                                    <GridViewColumn Width="60" Header="Is Open" DisplayMemberBinding="{Binding IsOpen}" />
                                    <GridViewColumn Width="80" Header="Is Selected" DisplayMemberBinding="{Binding IsSelected}" />
                                    <GridViewColumn Width="60" Header="Is Active" DisplayMemberBinding="{Binding IsActive}" />
                                    <GridViewColumn Width="60" Header="Is Floating" DisplayMemberBinding="{Binding IsFloating}" />
                                </GridView>
                            </ListView.View>
                        </ListView>
                    </docking:ToolWindow>
                </docking:ToolWindowContainer>
            </docking:SplitContainer>
        </docking:DockSite>

        <!-- Main Menu -->
        <shared:PixelSnapper Panel.ZIndex="1">
            <Menu>
                <MenuItem Header="File">
                    <MenuItem Header="New">
                        <MenuItem.Icon>
                            <Image Source="Resources/Images/NewFile_16x.png"/>
                        </MenuItem.Icon>
                        <MenuItem Header="StepBro File" Tag=".sbs" Command="{Binding CreateNewStepBroDocumentCommand}"/>
                        <MenuItem Header="Text File" Tag=".txt" Command="{Binding CreateNewTextDocumentCommand}"/>
                    </MenuItem>
                    <MenuItem Header="Open..." Command="ApplicationCommands.Open">
                        <MenuItem.Icon>
                            <Image Source="Resources/Images/OpenFile_16x.png"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <Separator />
                    <MenuItem Header="Save" Command="ApplicationCommands.Save">
                        <MenuItem.Icon>
                            <Image Source="Resources/Images/Save_16x.png"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <Separator />
                    <!--<MenuItem Header="Print" Command="ApplicationCommands.Print" Icon="" />
                    <MenuItem Header="Print Preview" Command="ApplicationCommands.PrintPreview" Icon="" />
                    <Separator />-->
                    <MenuItem Header="Exit" Command="ApplicationCommands.Close"/>
                </MenuItem>
                <MenuItem Header="Edit">
                    <MenuItem Command="ApplicationCommands.Undo">
                        <MenuItem.Icon>
                            <Image Source="Resources/Images/Undo_16x.png"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Command="ApplicationCommands.Redo">
                        <MenuItem.Icon>
                            <Image Source="Resources/Images/Redo_16x.png"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <Separator />
                    <MenuItem Command="ApplicationCommands.Cut" Icon="" />
                    <MenuItem Command="editor:EditorCommands.CutAndAppendToClipboard" />
                    <MenuItem Command="ApplicationCommands.Copy" Icon="" />
                    <MenuItem Command="editor:EditorCommands.CopyAndAppendToClipboard" />
                    <MenuItem Command="ApplicationCommands.Paste" Icon="" />
                    <MenuItem Command="ApplicationCommands.Delete" Icon="" />
                    <Separator />
                    <MenuItem Command="editor:EditorCommands.SelectAll" />
                    <MenuItem Header="Advanced">
                        <!--<MenuItem CommandTarget="{Binding ElementName=editor}" Command="editor:EditorCommands.FormatDocument" Icon="" />
                        <MenuItem CommandTarget="{Binding ElementName=editor}" Command="editor:EditorCommands.FormatSelection" Icon="" />
                        <Separator />-->
                        <MenuItem Command="editor:EditorCommands.Indent" Icon="" />
                        <MenuItem Command="editor:EditorCommands.Outdent" Icon="" />
                        <Separator />
                        <MenuItem Command="editor:EditorCommands.ConvertTabsToSpaces" />
                        <MenuItem Command="editor:EditorCommands.ConvertSpacesToTabs" />
                        <MenuItem Command="editor:EditorCommands.TabifySelectedLines" />
                        <MenuItem Command="editor:EditorCommands.UntabifySelectedLines" />
                        <Separator />
                        <MenuItem Command="editor:EditorCommands.CommentLines" />
                        <MenuItem Command="editor:EditorCommands.UncommentLines" />
                        <Separator />
                        <MenuItem Command="editor:EditorCommands.MakeUppercase" />
                        <MenuItem Command="editor:EditorCommands.MakeLowercase" />
                        <MenuItem Command="editor:EditorCommands.ToggleCharacterCasing" />
                        <MenuItem Command="editor:EditorCommands.Capitalize" />
                        <Separator />
                        <MenuItem Command="editor:EditorCommands.DeleteHorizontalWhitespace" />
                        <MenuItem Command="editor:EditorCommands.TrimAllTrailingWhitespace" />
                        <MenuItem Command="editor:EditorCommands.TrimTrailingWhitespace" />
                        <MenuItem Command="editor:EditorCommands.DeleteLine" />
                        <MenuItem Command="editor:EditorCommands.Duplicate" />
                        <MenuItem Command="editor:EditorCommands.DeleteBlankLines" />
                        <Separator />
                        <MenuItem Command="editor:EditorCommands.MoveSelectedLinesUp" />
                        <MenuItem Command="editor:EditorCommands.MoveSelectedLinesDown" />
                        <!--<MenuItem CommandTarget="{Binding ElementName=editor}" Command="editor:EditorCommands.TransposeLines" />
                        <MenuItem CommandTarget="{Binding ElementName=editor}" Command="editor:EditorCommands.TransposeWords" />
                        <MenuItem CommandTarget="{Binding ElementName=editor}" Command="editor:EditorCommands.TransposeCharacters" />
                        <Separator />-->
                        <!--<MenuItem CommandTarget="{Binding ElementName=editor}" Command="editor:EditorCommands.IncrementalSearch" />-->
                    </MenuItem>
                    <MenuItem Header="Outlining">
                        <MenuItem Command="editor:EditorCommands.CollapseToDefinitions" />
                        <MenuItem Command="editor:EditorCommands.HideSelection" />
                        <MenuItem Command="editor:EditorCommands.ToggleOutliningExpansion" />
                        <MenuItem Command="editor:EditorCommands.ToggleAllOutliningExpansion" />
                        <MenuItem Command="editor:EditorCommands.StopOutlining" />
                        <MenuItem Command="editor:EditorCommands.StopHidingCurrent" />
                        <MenuItem Command="editor:EditorCommands.StartAutomaticOutlining" />
                    </MenuItem>

                </MenuItem>
                <MenuItem Header="View">
                    <MenuItem Header="Error List" Command="{Binding ShowErrorsViewCommand}"/>
                    <MenuItem Header="Output" Command="{Binding ShowOutputViewCommand}">
                        <MenuItem.Icon>
                            <Image Source="Resources/Images/Output16.png"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Calculator" Command="{Binding ShowCalculatorToolCommand}">
                        <MenuItem.Icon>
                            <Image Source="Resources/Images/Calculator_16x.png"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Object Panel TBD" Command="{Binding CreateObjectPanelCommand}"/>
                    <!--<MenuItem Header="Open Object Panel" ItemsSource="{Binding CreateableObjectPanelsList}">
                        <MenuItem.ItemContainerStyle>
                            <Style TargetType="MenuItem">
                                <Setter Property="Header" Value="{Binding Path=ItemType.Name}" />
                                <Setter Property="Command" Value="{Binding Path=AddItemCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Grid}}" />
                                <Setter Property="CommandParameter" Value="{Binding}" />
                            </Style>
                        </MenuItem.ItemContainerStyle>
                    </MenuItem>-->
                    <!--<MenuItem Header="Editor Settings">
                        <MenuItem Header="Indicator Margin Visible" IsCheckable="True" IsChecked="{Binding ElementName=editor, Path=IsIndicatorMarginVisible, Mode=TwoWay}" />
                        <MenuItem Header="Line Number Margin Visible" IsCheckable="True" IsChecked="{Binding ElementName=editor, Path=IsLineNumberMarginVisible, Mode=TwoWay}" />
                        <MenuItem Header="Outlining Margin Visible" IsCheckable="True" IsChecked="{Binding ElementName=editor, Path=IsOutliningMarginVisible, Mode=TwoWay}" />
                        <MenuItem Header="Ruler Margin Visible" IsCheckable="True" IsChecked="{Binding ElementName=editor, Path=IsRulerMarginVisible, Mode=TwoWay}" />
                        <MenuItem Header="Selection Margin Visible" IsCheckable="True" IsChecked="{Binding ElementName=editor, Path=IsSelectionMarginVisible, Mode=TwoWay}" />
                        <Separator />
                        -->
                    <!--<MenuItem x:Name="wordWrapMenuItem" Header="Word Wrap"/>
                        <MenuItem Header="Word Wrap Glyphs Visible" IsCheckable="True" IsChecked="{Binding ElementName=editor, Path=AreWordWrapGlyphsVisible, Mode=TwoWay}" />
                        <MenuItem Header="Whitespace Visible" IsCheckable="True" IsChecked="{Binding ElementName=editor, Path=IsWhitespaceVisible, Mode=TwoWay}" />
                        <Separator />-->
                    <!--<MenuItem Header="Can Scroll Past Document End" IsCheckable="True" IsChecked="{Binding ElementName=editor, Path=CanScrollPastDocumentEnd, Mode=TwoWay}" />
                        <MenuItem Header="Virtual Space at Line End" IsCheckable="True" IsChecked="{Binding ElementName=editor, Path=IsVirtualSpaceAtLineEndEnabled, Mode=TwoWay}" />
                        <Separator />-->
                    <!--
                        <MenuItem Header="Indentation Guides Visible" IsCheckable="True" IsChecked="{Binding ElementName=editor, Path=AreIndentationGuidesVisible, Mode=TwoWay}" />
                        <MenuItem Header="Line Modification Marks Visible" IsCheckable="True" IsChecked="{Binding ElementName=editor, Path=AreLineModificationMarksVisible, Mode=TwoWay}" />
                        <MenuItem Header="Current Line Highlighting Enabled" IsCheckable="True" IsChecked="{Binding ElementName=editor, Path=IsCurrentLineHighlightingEnabled, Mode=TwoWay}" />
                        <MenuItem Header="Delimiter Highlighting Enabled" IsCheckable="True" IsChecked="{Binding ElementName=editor, Path=IsDelimiterHighlightingEnabled, Mode=TwoWay}" />
                        <MenuItem Header="Search Result Highlighting Enabled" IsCheckable="True" IsChecked="{Binding ElementName=editor, Path=IsSearchResultHighlightingEnabled, Mode=TwoWay}" />
                        <MenuItem Header="Auto-Correct Enabled" IsCheckable="True" IsChecked="{Binding ElementName=editor, Path=IsAutoCorrectEnabled, Mode=TwoWay}" />
                        -->
                    <!--<Separator />-->
                    <!--<MenuItem x:Name="toggleTokenInfoMenuItem" Header="Toggle Token Info in Status Bar" IsCheckable="True"/>-->
                    <!--
                    </MenuItem>-->
                </MenuItem>
                <MenuItem Header="Script">
                    <MenuItem Header="Run" Command="{Binding StartOrContinueExecutionCommand}" InputGestureText="F5">
                        <MenuItem.Icon>
                            <Image Source="Resources/Images/Run_16x.png"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Run Element Selected In Editor" Command="{Binding StartExecutionOfSelectedFileElementCommand}" InputGestureText="Ctrl+Shift+F5">
                        <MenuItem.Icon>
                            <Image Source="Resources/Images/Run_16x.png"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <Separator />
                    <MenuItem Header="Step Into" IsEnabled="False">
                        <MenuItem.Icon>
                            <Image Source="Resources/Images/StepIn_16x.png"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Step Over" IsEnabled="False">
                        <MenuItem.Icon>
                            <Image Source="Resources/Images/StepOver_16x.png"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Step Out" IsEnabled="False">
                        <MenuItem.Icon>
                            <Image Source="Resources/Images/StepOut_16x.png"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <Separator />
                    <MenuItem Header="Parse All Files" Command="{Binding ParseAllFilesCommand}" InputGestureText="F6">
                        <MenuItem.Icon>
                            <Image Source="Resources/Images/Compile_16x.png"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Debug Mode" IsEnabled="False"/>
                </MenuItem>
                <MenuItem Header="Macros">
                    <MenuItem Header="Run Saved Macro"/>
                    <MenuItem Header="Run Recorded Macro" Command="editor:EditorCommands.RunMacro" />
                    <MenuItem x:Name="recordMacroMenuItem" Header="Record Macro" Command="editor:EditorCommands.ToggleMacroRecording" />
                    <MenuItem x:Name="pauseRecordingMenuItem" Header="Pause Recording" Command="editor:EditorCommands.PauseResumeMacroRecording" />
                    <MenuItem x:Name="cancelRecordingMenuItem" Header="Cancel Recording" Command="editor:EditorCommands.CancelMacroRecording" />
                    <Separator />
                    <MenuItem x:Name="repeatActionMenuItem" Header="Repeat Action" Icon="" />
                    <!--Command="{Binding CustomEditCommands.RepeatActivationCommand}" />-->
                    <!--CommandTarget="{Binding ElementName=editor}"-->
                </MenuItem>
                <MenuItem Header="Window">
                    <!--<MenuItem Header="Can Split Horizontally" IsCheckable="True" IsChecked="{Binding ElementName=editor, Path=CanSplitHorizontally, Mode=TwoWay}" />
                    <MenuItem Header="Has Horizontal Split" IsCheckable="True" IsChecked="{Binding ElementName=editor, Path=HasHorizontalSplit, Mode=TwoWay}" />
                    <Separator />
                    <MenuItem Header="Is Document Read-only" IsCheckable="True" IsChecked="{Binding ElementName=editor, Path=Document.IsReadOnly, Mode=TwoWay}" />-->
                </MenuItem>
            </Menu>
        </shared:PixelSnapper>

        <!-- Toolbar -->
        <shared:PixelSnapper Grid.Row="1">
            <ToolBarTray>
                <ToolBar>
                    <Button Command="ApplicationCommands.New" ToolTip="New">
                        <Image Source="Resources/Images/NewFile_16x.png"/>
                    </Button>
                    <Button Command="ApplicationCommands.Open" ToolTip="Open">
                        <Image Source="Resources/Images/OpenFile_16x.png"/>
                    </Button>
                    <Button Command="ApplicationCommands.Save" ToolTip="Save">
                        <Image Source="Resources/Images/Save_16x.png"/>
                    </Button>
                    <Separator />
                    <!--<Button Command="ApplicationCommands.Print" ToolTip="Print">
                        <Image Source="Resources/Images/NewFile_16x.png"/>
                    </Button>
                    <Button Command="ApplicationCommands.PrintPreview" ToolTip="Print Preview">
                        <Image Source="Resources/Images/NewFile_16x.png"/>
                    </Button>
                    <Separator />-->
                    <!--<Button Command="ApplicationCommands.Cut" ToolTip="Cut">
                        <Image Source="Resources/Images/NewFile_16x.png"/>
                    </Button>
                    <Button Command="ApplicationCommands.Copy" ToolTip="Copy">
                        <Image Source="Resources/Images/NewFile_16x.png"/>
                    </Button>
                    <Button Command="ApplicationCommands.Paste" ToolTip="Paste">
                        <Image Source="Resources/Images/NewFile_16x.png"/>
                    </Button>
                    <Button Command="ApplicationCommands.Delete" ToolTip="Delete">
                        <Image Source="Resources/Images/NewFile_16x.png"/>
                    </Button>
                    <Separator />-->
                    <Button Command="ApplicationCommands.Undo" ToolTip="Undo">
                        <Image Source="Resources/Images/Undo_16x.png"/>
                    </Button>
                    <Button Command="ApplicationCommands.Redo" ToolTip="Redo">
                        <Image Source="Resources/Images/Redo_16x.png"/>
                    </Button>
                    <!--<Separator />
                    <Button CommandTarget="{Binding ElementName=editor}" Command="editor:EditorCommands.RequestIntelliPromptCompletionSession" ToolTip="Display an Object Member List">
                        <Image Source="Resources/Images/NewFile_16x.png"/>
                    </Button>
                    <Button CommandTarget="{Binding ElementName=editor}" Command="editor:EditorCommands.RequestIntelliPromptParameterInfoSession" ToolTip="Display Parameter Info">
                        <Image Source="Resources/Images/NewFile_16x.png"/>
                    </Button>
                    <Button CommandTarget="{Binding ElementName=editor}" Command="editor:EditorCommands.RequestIntelliPromptQuickInfoSession" ToolTip="Display Quick Info">
                        <Image Source="Resources/Images/NewFile_16x.png"/>
                    </Button>
                    <Button CommandTarget="{Binding ElementName=editor}" Command="editor:EditorCommands.RequestIntelliPromptAutoComplete" ToolTip="Display Word Completion">
                        <Image Source="Resources/Images/NewFile_16x.png"/>
                    </Button>
                    <Button CommandTarget="{Binding ElementName=editor}" Command="editor:EditorCommands.RequestIntelliPromptInsertSnippetSession" ToolTip="Insert Snippet">
                        <Image Source="Resources/Images/NewFile_16x.png"/>
                    </Button>-->
                    <Separator />
                    <Button Command="editor:EditorCommands.Outdent" ToolTip="Outdent">
                        <Image Source="Resources/Images/NewFile_16x.png"/>
                    </Button>
                    <Button Command="editor:EditorCommands.Indent" ToolTip="Indent">
                        <Image Source="Resources/Images/NewFile_16x.png"/>
                    </Button>
                    <!--<Separator />
                    <Button Command="editor:EditorCommands.CommentLines" ToolTip="Comment out the selected lines">
                        <Image Source="Resources/Images/NewFile_16x.png"/>
                    </Button>
                    <Button Command="editor:EditorCommands.UncommentLines" ToolTip="Uncomment the selected lines">
                        <Image Source="Resources/Images/NewFile_16x.png"/>
                    </Button>-->
                    <!--<Separator />-->
                    <!--<Button CommandTarget="{Binding ElementName=editor}" Command="editor:EditorCommands.FormatDocument" ToolTip="Format Document">
                        <Image Source="Resources/Images/NewFile_16x.png"/>
                    </Button>
                    <Button CommandTarget="{Binding ElementName=editor}" Command="editor:EditorCommands.FormatSelection" ToolTip="Format Selection">
                        <Image Source="Resources/Images/NewFile_16x.png"/>
                    </Button>
                    <Separator />-->
                    <!--<Button Command="editor:EditorCommands.RunMacro" ToolTip="Run Recorded Macro">
                        <Image Source="Resources/Images/NewFile_16x.png"/>
                    </Button>
                    <Button x:Name="recordMacroButton" Command="editor:EditorCommands.ToggleMacroRecording" ToolTip="Record Macro">
                        <Image Source="Resources/Images/NewFile_16x.png"/>
                    </Button>
                    <ToggleButton x:Name="pauseRecordingButton" Command="editor:EditorCommands.PauseResumeMacroRecording" ToolTip="Pause Recording">
                        <Image Source="Resources/Images/NewFile_16x.png"/>
                    </ToggleButton>
                    <Button Command="editor:EditorCommands.CancelMacroRecording" ToolTip="Cancel Recording">
                        <Image Source="Resources/Images/NewFile_16x.png"/>
                    </Button>-->
                </ToolBar>
                <ToolBar>
                    <Button Command="{Binding ParseAllFilesCommand}" ToolTip="Parse all files">
                        <Image Source="Resources/Images/Compile_16x.png"/>
                    </Button>
                    <Button Command="{Binding StartOrContinueExecutionCommand}" ToolTip="Start or continue execution">
                        <Image Source="Resources/Images/Run_16x.png"/>
                    </Button>
                    <editor:SyntaxEditor x:Name="editor" IsMultiLine="False" MinWidth="240" IsTextDataBindingEnabled="True" ToolTip="Procedure or partner to execute" Text="{Binding ExecutionTarget}"/>
                    <Button ToolTip="Step Into">
                        <Image Source="Resources/Images/StepIn_16x.png"/>
                    </Button>
                    <Button ToolTip="Step Over">
                        <Image Source="Resources/Images/StepOver_16x.png"/>
                    </Button>
                    <Button ToolTip="Step Out">
                        <Image Source="Resources/Images/StepOut_16x.png"/>
                    </Button>
                </ToolBar>
            </ToolBarTray>
        </shared:PixelSnapper>

        <!-- Statusbar -->
        <shared:PixelSnapper Grid.Row="3">
            <StatusBar FocusManager.IsFocusScope="True" Style="{DynamicResource {x:Static themes:SharedResourceKeys.StatusBarStyleKey}}">
                <StatusBar.ItemsPanel>
                    <ItemsPanelTemplate>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" MinWidth="50" />
                                <ColumnDefinition Width="Auto" MinWidth="150" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                        </Grid>
                    </ItemsPanelTemplate>
                </StatusBar.ItemsPanel>

                <StatusBarItem x:Name="messagePanel">
                    <TextBlock Text="{Binding ApplicationStateMessage}"/>
                </StatusBarItem>

                <StatusBarItem Grid.Column="1">
                    <StackPanel Margin="0,0,10,0" Orientation="Horizontal">
                        <Button x:Name="Calculator" Background="#00000000" Foreground="{x:Null}" BorderBrush="{x:Null}" Command="{Binding ShowCalculatorToolCommand}">
                            <Image x:Name="image" Height="16" Width="16" Source="/Resources/Images/Calculator_16x.png"/>
                        </Button>
                        <!--<TextBox x:Name="calculator" IsReadOnly="True" MinWidth="40" Margin="7,0,7,0" VerticalAlignment="Center" Text="12345" Background="#00000000" Foreground="White" />-->
                        <TextBlock x:Name="calculator" MinWidth="40" Margin="7,0,7,0" VerticalAlignment="Center" Text="" />
                    </StackPanel>
                </StatusBarItem>


                <StatusBarItem Grid.Column="2">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock x:Name="linePanel" MinWidth="40" Margin="7,0,7,0" VerticalAlignment="Center" Text="Ln 728" />
                        <TextBlock x:Name="columnPanel" MinWidth="40" Margin="7,0,7,0" VerticalAlignment="Center" Text="Col 61" />
                        <TextBlock x:Name="characterPanel" MinWidth="40" Margin="7,0,7,0" VerticalAlignment="Center" Text="Ch 61" />
                    </StackPanel>
                </StatusBarItem>

                <StatusBarItem x:Name="overwriteModePanel" Grid.Column="3" Margin="7,0,15,0" Content="INS" />
            </StatusBar>
        </shared:PixelSnapper>

    </Grid>

    <!--
	
		NOTE: Normally the Docking control code would be placed directly within this MainWindow.xaml definition instead.

	-->

</UserControl>
