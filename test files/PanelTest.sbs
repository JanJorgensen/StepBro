using StepBro.Streams;
using StepBro.TestInterface;
using StepBro.PanelCreator;

SerialPort portGRT = SerialPort()
{
	PortName = "COM8",
    BaudRate = 460800,
    StopBits = One
}

SerialTestConnection grt = SerialTestConnection()
{ 
    Stream = portGRT, 
    CommandResponseTimeout = 5s,
    commands : [ 
        {"Help|Get Help": "help"},
        {"Help|About": "about"},
        {"List|Commands": "list commands"},
        {"List|Objects": "list objects"},
        {"LED": "led 2"}
    ]
}

Panel panel = Panel("GRT Test")
{
    HorizontalSplit Main:
    {
        MinHeight: 400, MinWidth: 600,
        VerticalSplit Top: 
        {
            FlowTopDownWrap Left: 
            {
                Name: Commands,
                MaxWidth: 120,
                Controls:
                {
                    ProcedureActivationButton Start: { Procedure: StartSomeShit, Model: WithSetup },
                    ProcedureActivationButton Stop: { Text: "Stop All Shit !!", Procedure: StopAllShit },
                    ProcedureActivationButton SendReset: { Text: "Reset", Procedure: SendTargetCommand, Arguments: "reset" },
                    ProcedureActivationCheckbox ConnectControl: { Text: "Connected", StateProcedure: IsConnected, ActivateProcedure: Connect, DeactivateProcedure: Disconnect},
                    ObjectPropertyCheckbox AutoReplyOption: { Text: "Auto Reply", ReadOnly, Object: harness, Property: AutoReply }
                }
            },
            SerialTestConnectionTerminal Right: { Instance: target }
        },
        ExecutionLogViewer Bottom: { Title: "Execution Log", MinHeight: 200, Minidth: 300 }
    }
}

procedure void DoIt()
{
    panel.DumpPanelElements();
    panel.Start.Enabled = false;
    string value = panel.Top.Left.Stop.Text;
    log("panel.Top.Left.Stop.Text: " + value);
    value = panel.Commands.SendReset.Procedure;
    log("panel.Commands.SendReset.Procedure: " + value);
    int n = panel.Bottom.MinimumHeight;
    log("panel.Bottom.MinimumHeight: " + n);

    log("Done!");
}
